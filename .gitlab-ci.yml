stages:
  - bundle_cache
  - test
  - build

bundler:
  image: ruby:2.5
  stage: bundle_cache
  script:
    - ruby -v                                   # Print out ruby version for debugging
    - gem install bundler  --no-document    # Bundler is not installed with the image
    - bundle install -j $(nproc) --path vendor  # Install dependencies into ./vendor/ruby
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - vendor/ruby

variables:
  DB_HOST: postgres
  DB_PASS: postgres
  DB_USER: postgres

brakeman:
  stage: test
  image: ruby:2.5
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - vendor/ruby
  before_script:
    - bundle install -j $(nproc) --path vendor
  script:
    - bundle exec brakeman

rubocop:
  stage: test
  image: ruby:2.5
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - vendor/ruby
  before_script:
    - bundle install -j $(nproc) --path vendor
  script:
    - bundle exec rubocop

rspec:
  stage: test
  image: ruby:2.5
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - vendor/ruby
  services:
    - postgres:latest
  before_script:
    - apt-get update -q && apt-get install nodejs -yqq
    - ruby -v
    - gem install bundler  --no-document
    - bundle install -j $(nproc) --path vendor 
    - bundle exec rake db:create RAILS_ENV=test
    - bundle exec rake db:schema:load RAILS_ENV=test
  script:
    - bundle exec rspec

build:
  image: docker:latest
  services:
    - docker:dind
  stage: build
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker build -t registry.gitlab.com/cassiopgodinho/ci-integrations-example .
    - docker push registry.gitlab.com/cassiopgodinho/ci-integrations-example
