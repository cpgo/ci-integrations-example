stages:
  - bundle_cache
  - test
  - build

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - vendor/ruby

bundler:
  stage: bundle_cache
  script:
    - ruby -v                                   # Print out ruby version for debugging
    - gem install bundler  --no-ri --no-rdoc    # Bundler is not installed with the image
    - bundle install -j $(nproc) --path vendor  # Install dependencies into ./vendor/ruby

variables:
  DB_HOST: postgres
  DB_PASS: postgres
  DB_USER: postgres

brakeman:
  stage: test
  image: ruby:2.5
  before_script:
    - bundle install
  script:
    - bundle exec brakeman

rubocop:
  stage: test
  image: ruby:2.5
  before_script:
    - bundle install
  script:
    - bundle exec rubocop

rspec:
  stage: test
  image: ruby:2.5
  services:
    - postgres:latest
  before_script:
    - apt-get update -q && apt-get install nodejs -yqq
    - ruby -v
    - gem install bundler  --no-ri --no-rdoc
    - bundle install -j $(nproc) 
    - rake db:create RAILS_ENV=test
    - rake db:schema:load RAILS_ENV=test

  script:
    - bundle exec rspec

build:
  stage: build
  only:
    - master
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker build .